import type { Frontmatter, Item, Options, Recordable } from "../types";
import type { DefaultTheme } from "vitepress";
/** 处理文件路径字符串数组 */
export declare function serializationPaths(paths: string[], { itemsSetting, useArticleTitle, frontmatterPrefix }: Options, srcDir: string): Promise<Item[]>;
/** 对结构化后的多级数组数据进行逐级排序 */
export declare function sortStructuredData(data: Item[], compareFn?: (a: Item, b: Item, frontmatterPrefix?: string) => number, frontmatterPrefix?: string): Item[];
/** 默认排序方法 */
export declare function defaultCompareFn(a: Item, b: Item, frontmatterPrefix?: string): number;
/** 生成 nav 数据 */
export declare function generateNav(structuredData: Item[]): {
    text: string;
    activeMatch: string;
    link: string;
}[];
/** 获取首层目录中第一篇文章 */
export declare function getFirstArticleFromFolder(data: Item, path?: string): string;
/** 生成 sidebar */
export declare function generateSidebar(structuredData: Item[], options: Options): DefaultTheme.Sidebar;
/**
 * 读取文章frontmatter以及h1
 * @param absolutePath - 需要是绝对路径，与cache中对应
 */
export declare function getArticleData(absolutePath: string): Promise<Frontmatter>;
/** 处理文章h1存在变量的情况 */
export declare function getArticleTitle(content: string, data: Recordable): string | undefined;
